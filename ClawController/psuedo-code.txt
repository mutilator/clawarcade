Startup Procedure
- Check recoil limit
- recoil if not at limit (need recoil procedure)
- Run right
- Run Forward
- check limit for right and forward  - STATE = CLAW_FORWARD
- if at limit for either direction
    - stop motor for that direction
- if at limit for both directions
    - run function to start home calculations

Home calculation procedure
- Initialize timer
- check limit
- Run left 
- check limit - STATE = CHECK_HOMING_L
- if at limit
    - stop motor
    - save motor run duration
    - New timer for backward
    - Run backward
        - check limit - STATE = CHECK_HOMING_B
        - if at limit
            - stop motor
            - store motor run duration backward
- Run to center function

Return to center 
- divide time in half
- run for that duration per direction to move claw to center  - STATE = CHECK_CENTERING

Drop claw procedure
- check whether the claw is recoiled
- run drop motor
- check for tension limiter - STATE = CHECK_DROP_TENSION
- if at limit
    - stop drop motor
    - close claw
    - run recoil motor
    - check for recoil limiter - STATE = CHECK_DROP_RECOIL
    - if at limit
        - Run return to win chute function

Run to win chute
- Check left limit
- run left
- check for limit - STATE = CHECK_RUNWIN_LEFT
- if at limit
    - stop left
    - check back limit
    - run backward
    - check limit - STATE = CHECK_RUNWIN_BACK
    - if at limit
        - stop back
        - Open claw
        - Run wiggle command?
        - Run return to center command


Function for running motor in each direction
- check limit in that direction
- run motor

Timeout = 100ms;

Run right
    timestampRight = 1000;
    digitalwrite high

Check limits
curTime = 2000;
diff = curTime - timestampRight = 2000 - 1000 = 1000
if diff > Timeout - if 1000 > 100

stopMotor
    timestampRight = 0;
    digitwrite Low


